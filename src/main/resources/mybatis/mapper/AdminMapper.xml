<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sju.program.mapper.AdminMapper">
    
    <resultMap type="Admin" id="AdminResult">
        <result property="adminId"    column="admin_id"    />
        <result property="adminUsername"    column="admin_username"    />
        <result property="adminPassword"    column="admin_password"    />
        <result property="adminDeleteFlag"    column="admin_delete_flag"    />
    </resultMap>

    <sql id="selectAdminVo">
        select admin_id, admin_username, admin_password, admin_delete_flag from admin
    </sql>

    <select id="selectAdminList" parameterType="Admin" resultMap="AdminResult">
        <include refid="selectAdminVo"/>
        WHERE admin_delete_flag !=1
        <!--<where>
            <if test="adminUsername != null  and adminUsername != ''"> and admin_username like concat('%', #{adminUsername}, '%')</if>
            <if test="adminPassword != null  and adminPassword != ''"> and admin_password = #{adminPassword}</if>
            <if test="adminDeleteFlag != null  and adminDeleteFlag != ''"> and admin_delete_flag = #{adminDeleteFlag}</if>
        </where>
            <if test="adminUpdateFlag != null "> and admin_update_flag = #{adminUpdateFlag}</if>
        </where>-->
    </select>
    
    <select id="selectAdminById" parameterType="Long" resultMap="AdminResult">
        <include refid="selectAdminVo"/>
        where admin_id = #{adminId}
    </select>

    <select id="selectAdminByUsername" parameterType="String" resultMap="AdminResult">
        <include refid="selectAdminVo"/>
        where admin_username = #{adminUsername}
    </select>

        
    <insert id="insertAdmin" parameterType="Admin" useGeneratedKeys="true" keyProperty="adminId">
        insert into admin
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="adminUsername != null">admin_username,</if>
            <if test="adminPassword != null">admin_password,</if>
            admin_delete_flag
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="adminUsername != null">#{adminUsername},</if>
            <if test="adminPassword != null">#{adminPassword},</if>
            #{adminDeleteFlag}
         </trim>
    </insert>

    <update id="updateAdmin" parameterType="Admin">
        update admin
        <trim prefix="SET" suffixOverrides=",">
            <if test="adminUsername != null">admin_username = #{adminUsername},</if>
            <if test="adminPassword != null">admin_password = #{adminPassword},</if>
            <if test="adminDeleteFlag != null">admin_delete_flag = #{adminDeleteFlag},</if>

        </trim>
        where admin_id = #{adminId}
    </update>

    <update id="deleteAdminById" parameterType="Long">
        update admin SET admin_delete_flag = 1
        where admin_id = #{adminId}
    </update>

    <update id="deleteAdminByIds" parameterType="String">
        update admin SET admin_delete_flag = 1 where admin_id in
        <foreach item="adminId" collection="array" open="(" separator="," close=")">
            #{adminId}
        </foreach>
    </update>

    <!--<delete id="deleteAdminById" parameterType="Long">
    <delete id="deleteAdminById" parameterType="Long">
        delete from admin where admin_id = #{adminId}
    </delete>

    <delete id="deleteAdminByIds" parameterType="String">
        delete from admin where admin_id in 
        <foreach item="adminId" collection="array" open="(" separator="," close=")">
            #{adminId}
        </foreach>
    </delete>-->
</mapper>