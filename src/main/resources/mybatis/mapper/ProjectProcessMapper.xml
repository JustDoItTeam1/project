<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sju.program.mapper.ProjectProcessMapper">
    
    <resultMap type="ProjectProcess" id="ProjectProcessResult">
        <result property="ppId"    column="pp_id"    />
        <result property="ppTime"    column="pp_time"    />
        <result property="ppProjectId"    column="pp_project_id"    />
        <result property="ppDescription"    column="pp_description"    />
        <result property="ppDeleteFlag"    column="pp_delete_flag"    />
        <result property="ppUpdateFlag"    column="pp_update_flag"    />
    </resultMap>

    <sql id="selectProjectProcessVo">
        select pp_id, pp_time, pp_project_id, pp_description, pp_delete_flag, pp_update_flag from project_process
    </sql>

    <select id="selectProjectProcessList" parameterType="ProjectProcess" resultMap="ProjectProcessResult">
        <include refid="selectProjectProcessVo"/>
        <where>  
            <if test="ppTime != null "> and pp_time = #{ppTime}</if>
            <if test="ppProjectId != null "> and pp_project_id = #{ppProjectId}</if>
            <if test="ppDescription != null  and ppDescription != ''"> and pp_description = #{ppDescription}</if>
            <if test="ppDeleteFlag != null  and ppDeleteFlag != ''"> and pp_delete_flag = #{ppDeleteFlag}</if>
            <if test="ppUpdateFlag != null "> and pp_update_flag = #{ppUpdateFlag}</if>
        </where>
    </select>
    
    <select id="selectProjectProcessById" parameterType="Long" resultMap="ProjectProcessResult">
        <include refid="selectProjectProcessVo"/>
        where pp_id = #{ppId}
    </select>
        
    <insert id="insertProjectProcess" parameterType="ProjectProcess" useGeneratedKeys="true" keyProperty="ppId">
        insert into project_process
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="ppTime != null">pp_time,</if>
            <if test="ppProjectId != null">pp_project_id,</if>
            <if test="ppDescription != null">pp_description,</if>
            <if test="ppDeleteFlag != null">pp_delete_flag,</if>
            <if test="ppUpdateFlag != null">pp_update_flag,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="ppTime != null">#{ppTime},</if>
            <if test="ppProjectId != null">#{ppProjectId},</if>
            <if test="ppDescription != null">#{ppDescription},</if>
            <if test="ppDeleteFlag != null">#{ppDeleteFlag},</if>
            <if test="ppUpdateFlag != null">#{ppUpdateFlag},</if>
         </trim>
    </insert>

    <update id="updateProjectProcess" parameterType="ProjectProcess">
        update project_process
        <trim prefix="SET" suffixOverrides=",">
            <if test="ppTime != null">pp_time = #{ppTime},</if>
            <if test="ppProjectId != null">pp_project_id = #{ppProjectId},</if>
            <if test="ppDescription != null">pp_description = #{ppDescription},</if>
            <if test="ppDeleteFlag != null">pp_delete_flag = #{ppDeleteFlag},</if>
            <if test="ppUpdateFlag != null">pp_update_flag = #{ppUpdateFlag},</if>
        </trim>
        where pp_id = #{ppId}
    </update>

    <delete id="deleteProjectProcessById" parameterType="Long">
        delete from project_process where pp_id = #{ppId}
    </delete>

    <delete id="deleteProjectProcessByIds" parameterType="String">
        delete from project_process where pp_id in 
        <foreach item="ppId" collection="array" open="(" separator="," close=")">
            #{ppId}
        </foreach>
    </delete>
    
</mapper>