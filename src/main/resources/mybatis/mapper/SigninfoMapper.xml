<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sju.program.mapper.sign.SignInfoMapper">
  <resultMap id="BaseResultMap" type="com.sju.program.domain.sign.SignInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="sign_id" jdbcType="BIGINT" property="signId" />
    <result column="Longitude" jdbcType="DOUBLE" property="longitude" />
    <result column="Latitude" jdbcType="DOUBLE" property="latitude" />
    <result column="roadSection" jdbcType="VARCHAR" property="roadsection" />
    <result column="detailedAdd" jdbcType="VARCHAR" property="detailedadd" />
    <result column="Jurisdictio" jdbcType="VARCHAR" property="jurisdictio" />
    <result column="createTime" jdbcType="DATE" property="createtime" />
    <result column="Remark" jdbcType="VARCHAR" property="remark" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
  </resultMap>
  <sql id="Base_Column_List">
    id, sign_id, Longitude, Latitude, roadSection, detailedAdd, Jurisdictio, createTime,
    Remark, project_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sign_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sign_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.sju.program.domain.sign.SignInfo" useGeneratedKeys="true">
    insert into sign_info (sign_id, Longitude, Latitude,
      roadSection, detailedAdd, Jurisdictio,
      createTime, Remark, project_name
      )
    values (#{signId,jdbcType=BIGINT}, #{longitude,jdbcType=DOUBLE}, #{latitude,jdbcType=DOUBLE},
      #{roadsection,jdbcType=VARCHAR}, #{detailedadd,jdbcType=VARCHAR}, #{jurisdictio,jdbcType=VARCHAR},
      sysdate(), #{remark,jdbcType=VARCHAR}, #{projectName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.sju.program.domain.sign.SignInfo" useGeneratedKeys="true">
    insert into sign_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="signId != null">
        sign_id,
      </if>
      <if test="longitude != null">
        Longitude,
      </if>
      <if test="latitude != null">
        Latitude,
      </if>
      <if test="roadsection != null">
        roadSection,
      </if>
      <if test="detailedadd != null">
        detailedAdd,
      </if>
      <if test="jurisdictio != null">
        Jurisdictio,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="remark != null">
        Remark,
      </if>
      <if test="projectName != null">
        project_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="signId != null">
        #{signId,jdbcType=BIGINT},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="roadsection != null">
        #{roadsection,jdbcType=VARCHAR},
      </if>
      <if test="detailedadd != null">
        #{detailedadd,jdbcType=VARCHAR},
      </if>
      <if test="jurisdictio != null">
        #{jurisdictio,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=DATE},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sju.program.domain.sign.SignInfo">
    update sign_info
    <set>
      <if test="signId != null">
        sign_id = #{signId,jdbcType=BIGINT},
      </if>
      <if test="longitude != null">
        Longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null">
        Latitude = #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="roadsection != null">
        roadSection = #{roadsection,jdbcType=VARCHAR},
      </if>
      <if test="detailedadd != null">
        detailedAdd = #{detailedadd,jdbcType=VARCHAR},
      </if>
      <if test="jurisdictio != null">
        Jurisdictio = #{jurisdictio,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=DATE},
      </if>
      <if test="remark != null">
        Remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="projectName != null">
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sju.program.domain.sign.SignInfo">
    update sign_info
    set sign_id = #{signId,jdbcType=BIGINT},
      Longitude = #{longitude,jdbcType=DOUBLE},
      Latitude = #{latitude,jdbcType=DOUBLE},
      roadSection = #{roadsection,jdbcType=VARCHAR},
      detailedAdd = #{detailedadd,jdbcType=VARCHAR},
      Jurisdictio = #{jurisdictio,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=DATE},
      Remark = #{remark,jdbcType=VARCHAR},
      project_name = #{projectName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getAllSignInfo" resultType="com.sju.program.domain.vo.SignInfoVo">
    select id,s.name,s.icon,s.type,si.Longitude,si.Latitude,si.roadSection ,si.detailedAdd ,si.Jurisdictio ,si.createTime,si.Remark,si.project_name from sign_info si
    left join sign s on s.sign_id=si.sign_id
  </select>

  <select id="getSignInfoByLongitudeAndLatitude" parameterType="com.sju.program.domain.sign.SignInfo" resultMap="BaseResultMap">
    select * from sign_info si where si.Latitude=#{latitude} and si.Longitude=#{longitude}
  </select>

  <delete id="deleteSignInfo">
    delete from sign_info where id in
    <foreach collection="array" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>
  <select id="selectSignInMapById" parameterType="Long" resultMap="BaseResultMap">
    select * from sign_info where id=#{id}
  </select>

  <select id="selectSignInfoByName" parameterType="string" resultType="com.sju.program.domain.vo.SignInfoVo">
    select id,s.name,s.icon,s.type,si.Longitude,si.Latitude,si.roadSection ,si.detailedAdd ,si.Jurisdictio ,si.createTime,si.Remark,si.project_name from sign_info si                                                                                                         left join sign s on s.sign_id=si.sign_id
    where s.name like concat('%',#{s},'%')
  </select>


</mapper>
